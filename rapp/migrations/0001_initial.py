# Generated by Django 3.2.9 on 2021-11-13 23:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Muss_Kann_Liste',
            fields=[
                ('rollenname', models.CharField(max_length=100)),
                ('af_name', models.CharField(max_length=150)),
                ('enthalten_in_af', models.CharField(max_length=150, null=True)),
                ('wcUserid', models.CharField(max_length=32)),
                ('userid', models.CharField(max_length=32, null=True)),
                ('name', models.CharField(max_length=191, null=True)),
                ('mussfeld', models.IntegerField(null=True)),
                ('name_vn', models.CharField(max_length=191, null=True)),
                ('userundrollenid', models.IntegerField()),
                ('rollenmappingid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'lookformust_erg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ACLGruppen',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tf', models.CharField(db_index=True, max_length=150)),
                ('zugriff', models.CharField(max_length=50)),
                ('server', models.CharField(max_length=50)),
                ('pfad', models.CharField(max_length=400)),
                ('letzte_aenderung', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'ACL-Gruppen',
                'verbose_name_plural': '95_ACL-Gruppen',
                'ordering': ['tf'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Letzter_import',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start', models.DateTimeField()),
                ('user', models.CharField(max_length=100, null=True)),
                ('end', models.DateTimeField(null=True)),
                ('max', models.IntegerField()),
                ('aktuell', models.IntegerField()),
                ('schritt', models.IntegerField(default=1)),
                ('zi_orga', models.CharField(max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Letzter Import',
                'verbose_name_plural': 'Letzte Importe',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Modellierung',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entitlement', models.CharField(db_index=True, max_length=50, null=True)),
                ('neue_beschreibung', models.CharField(max_length=500, null=True)),
                ('plattform', models.CharField(db_index=True, max_length=30, null=True)),
                ('gf', models.CharField(db_index=True, max_length=50)),
                ('beschreibung_der_gf', models.CharField(max_length=500, null=True)),
                ('af', models.CharField(db_index=True, max_length=50)),
                ('beschreibung_der_af', models.CharField(max_length=500, null=True)),
                ('organisation_der_af', models.CharField(max_length=100, null=True)),
                ('eigentuemer_der_af', models.CharField(max_length=100, null=True)),
                ('aus_modellierung_entfernen', models.CharField(max_length=100, null=True)),
                ('datei', models.CharField(max_length=100, null=True)),
                ('letzte_aenderung', models.DateTimeField(default=django.utils.timezone.now, null=True)),
            ],
            options={
                'verbose_name': 'Modellierung AF GF TF',
                'verbose_name_plural': '60_Modellierung AF GF TF',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orga_details',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('abteilungsnummer', models.CharField(max_length=32, null=True)),
                ('organisation', models.CharField(max_length=100)),
                ('orgaBezeichnung', models.CharField(max_length=100, null=True)),
                ('fk', models.CharField(max_length=32, null=True)),
                ('kostenstelle', models.CharField(max_length=32, null=True)),
                ('orgID', models.IntegerField(null=True)),
                ('parentOrga', models.CharField(max_length=32, null=True)),
                ('parentOrgID', models.IntegerField(null=True)),
                ('orgaTyp', models.CharField(max_length=32, null=True)),
                ('fkName', models.CharField(max_length=32, null=True)),
                ('delegationEigentuemer', models.CharField(max_length=32, null=True)),
                ('delegationFK', models.CharField(max_length=32, null=True)),
                ('datum', models.DateTimeField(default=django.utils.timezone.now, null=True)),
            ],
            options={
                'verbose_name': 'Orga-Details',
                'verbose_name_plural': '50_Orga - Details',
                'ordering': ['organisation', 'orgID', 'parentOrga', 'fkName'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Setze_NPU_namen_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anzeige', models.CharField(max_length=200, null=True)),
                ('wert', models.IntegerField(null=True)),
                ('stamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblAfliste',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False, verbose_name='ID')),
                ('af_name', models.CharField(db_column='af_name', max_length=150, unique=True, verbose_name='AF-Name')),
                ('neu_ab', models.DateTimeField(db_column='neu_ab')),
            ],
            options={
                'verbose_name': 'Gültige AF',
                'verbose_name_plural': '98_Übersicht gültiger AFen (tbl_AFListe)',
                'db_table': 'tbl_AFListe',
                'ordering': ['af_name'],
                'managed': True,
                'unique_together': {('id', 'af_name', 'neu_ab')},
            },
        ),
        migrations.CreateModel(
            name='TblDb2',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('source', models.CharField(db_column='source', default='none', max_length=8)),
                ('grantee', models.CharField(db_column='grantee', default='none', max_length=15)),
                ('creator', models.CharField(db_column='CREATOR', default='none', max_length=15)),
                ('table', models.CharField(db_column='TABLE', db_index=True, max_length=31)),
                ('selectauth', models.CharField(blank=True, db_column='SELECTAUTH', max_length=3, null=True)),
                ('insertauth', models.CharField(blank=True, db_column='INSERTAUTH', max_length=3, null=True)),
                ('updateauth', models.CharField(blank=True, db_column='UPDATEAUTH', max_length=3, null=True)),
                ('deleteauth', models.CharField(blank=True, db_column='DELETEAUTH', max_length=3, null=True)),
                ('alterauth', models.CharField(blank=True, db_column='ALTERAUTH', max_length=3, null=True)),
                ('indexauth', models.CharField(blank=True, db_column='INDEXAUTH', max_length=3, null=True)),
                ('grantor', models.CharField(db_column='GRANTOR', max_length=15)),
                ('grantedts', models.CharField(db_column='GRANTEDTS', max_length=63)),
                ('datum', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'DB2-Berechtigung',
                'verbose_name_plural': '30_DB2 - Berechtigungen (Tbl_DB2)',
                'db_table': 'tbl_DB2',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblOrga',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('team', models.CharField(db_column='team', db_index=True, max_length=64)),
                ('themeneigentuemer', models.CharField(db_column='themeneigentuemer', max_length=64)),
                ('teamliste', models.TextField(blank=True, default=None, max_length=400, null=True)),
                ('freies_team', models.TextField(blank=True, default=None, max_length=4000, null=True)),
            ],
            options={
                'verbose_name': 'Orga-Information',
                'verbose_name_plural': '06_Team-Übersicht (tblOrga)',
                'db_table': 'tblOrga',
                'ordering': ['team'],
                'managed': True,
                'unique_together': {('id', 'team', 'themeneigentuemer')},
            },
        ),
        migrations.CreateModel(
            name='Tblrechteneuvonimport',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('identitaet', models.CharField(db_column='Identität', db_index=True, max_length=150)),
                ('nachname', models.CharField(blank=True, db_column='Nachname', max_length=100, null=True)),
                ('vorname', models.CharField(blank=True, db_column='Vorname', max_length=100, null=True)),
                ('tf_name', models.CharField(blank=True, db_column='TF Name', max_length=100, null=True)),
                ('tf_beschreibung', models.CharField(blank=True, db_column='TF Beschreibung', max_length=500, null=True)),
                ('af_anzeigename', models.CharField(blank=True, db_column='AF Anzeigename', max_length=100, null=True)),
                ('af_beschreibung', models.CharField(blank=True, db_column='AF Beschreibung', max_length=2000, null=True)),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='Höchste Kritikalität TF in AF', max_length=150, null=True)),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='TF Eigentümer Org', max_length=150, null=True)),
                ('tf_applikation', models.CharField(blank=True, db_column='TF Applikation', max_length=150, null=True)),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='TF Kritikalität', max_length=150, null=True)),
                ('gf_name', models.CharField(blank=True, db_column='GF Name', max_length=150, null=True)),
                ('gf_beschreibung', models.CharField(blank=True, db_column='GF Beschreibung', max_length=250, null=True)),
                ('direct_connect', models.CharField(blank=True, db_column='Direct Connect', max_length=150, null=True)),
                ('af_zugewiesen_an_account_name', models.CharField(blank=True, db_column='AF zugewiesen an Account-Name', max_length=150, null=True)),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='AF Gültig ab', null=True)),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='AF Gültig bis', null=True)),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='AF Zuweisungsdatum', null=True)),
                ('npu_rolle', models.CharField(blank=True, max_length=20, null=True)),
                ('npu_grund', models.CharField(blank=True, max_length=2000, null=True)),
                ('iiq_organisation', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Importiere neue Daten (tblRechteNeuVonImport)',
                'verbose_name_plural': 'Importiere neue Daten (tblRechteNeuVonImport)',
                'db_table': 'tblRechteNeuVonImport',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblRollen',
            fields=[
                ('rollenname', models.CharField(db_column='rollenname', max_length=100, primary_key=True, serialize=False, verbose_name='Rollen-Name')),
                ('system', models.CharField(db_column='system', db_index=True, max_length=150, verbose_name='System')),
                ('rollenbeschreibung', models.CharField(blank=True, db_column='rollenbeschreibung', db_index=True, max_length=190, null=True)),
                ('datum', models.DateTimeField(blank=True, db_column='datum', default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Rollenliste',
                'verbose_name_plural': '03_Rollen-Übersicht (tbl_Rollen)',
                'db_table': 'tbl_Rollen',
                'ordering': ['rollenname'],
                'managed': True,
                'unique_together': {('rollenname', 'system', 'rollenbeschreibung', 'datum')},
            },
        ),
        migrations.CreateModel(
            name='Tblsachgebiete',
            fields=[
                ('sachgebiet', models.CharField(db_column='Sachgebiet', max_length=32, primary_key=True, serialize=False)),
                ('definition', models.CharField(blank=True, db_column='Definition', max_length=250, null=True)),
                ('verantwortlicher', models.CharField(blank=True, db_column='Verantwortlicher', max_length=150, null=True)),
                ('telefon_verantwortlicher', models.CharField(blank=True, db_column='Telefon', max_length=150, null=True)),
                ('user_id_verantwortlicher', models.CharField(blank=True, db_column='user_id', max_length=50, null=True)),
                ('fk', models.CharField(blank=True, db_column='Führungskraft', max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Sachgebiet',
                'verbose_name_plural': '97_Übersicht Sachgebiete (tbl_Sachgebiete)',
                'db_table': 'tblSachgebiete',
                'ordering': ['sachgebiet'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblsubsysteme',
            fields=[
                ('sgss', models.CharField(db_column='sgss', max_length=32, primary_key=True, serialize=False)),
                ('definition', models.CharField(blank=True, db_column='Definition', max_length=250, null=True)),
                ('verantwortlicher', models.CharField(blank=True, db_column='Verantwortlicher', max_length=150, null=True)),
                ('telefon_verantwortlicher', models.CharField(blank=True, db_column='Telefon', max_length=150, null=True)),
                ('user_id_verantwortlicher', models.CharField(blank=True, db_column='user_id', max_length=50, null=True)),
                ('fk', models.CharField(blank=True, db_column='Führungskraft', max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Subsystem',
                'verbose_name_plural': '96_Übersicht Subsysteme (tbl_Subsysteme)',
                'db_table': 'tblSubsysteme',
                'ordering': ['sgss'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblUserIDundName',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='userid', max_length=32, unique=True)),
                ('name', models.CharField(db_column='name', db_index=True, max_length=191)),
                ('zi_organisation', models.CharField(db_column='zi_organisation', db_index=True, max_length=64, verbose_name='ZI-Organisation')),
                ('geloescht', models.IntegerField(blank=True, db_column='geloescht', null=True, verbose_name='gelöscht')),
                ('abteilung', models.CharField(db_column='abteilung', db_index=True, max_length=64)),
                ('gruppe', models.CharField(db_column='gruppe', db_index=True, max_length=50)),
                ('npu_rolle', models.CharField(blank=True, max_length=20, null=True)),
                ('npu_grund', models.CharField(blank=True, max_length=2000, null=True)),
                ('iiq_organisation', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('orga', models.ForeignKey(db_column='orga_id', on_delete=django.db.models.deletion.DO_NOTHING, to='rapp.tblorga', verbose_name='Team')),
            ],
            options={
                'verbose_name': 'UserID-Name-Kombination',
                'verbose_name_plural': '05_UserID-Name-Übersicht (tblUserIDundName)',
                'db_table': 'tblUserIDundName',
                'ordering': ['geloescht', 'name', '-userid'],
                'managed': True,
                'unique_together': {('id', 'userid', 'name', 'orga', 'zi_organisation', 'geloescht', 'abteilung', 'gruppe', 'npu_rolle'), ('userid', 'name')},
                'index_together': {('geloescht', 'zi_organisation')},
            },
        ),
        migrations.CreateModel(
            name='TblUebersichtAfGfs',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('name_gf_neu', models.CharField(db_column='name_gf_neu', max_length=50, verbose_name='GF Neu')),
                ('name_af_neu', models.CharField(db_column='name_af_neu', db_index=True, max_length=50, verbose_name='AF Neu')),
                ('kommentar', models.CharField(blank=True, db_column='kommentar', max_length=150, null=True)),
                ('zielperson', models.CharField(db_column='zielperson', max_length=50)),
                ('af_text', models.CharField(blank=True, db_column='af_text', max_length=150, null=True)),
                ('gf_text', models.CharField(blank=True, db_column='gf_text', max_length=150, null=True)),
                ('af_langtext', models.CharField(blank=True, db_column='af_langtext', max_length=250, null=True)),
                ('af_ausschlussgruppen', models.CharField(blank=True, db_column='af_ausschlussgruppen', max_length=250, null=True)),
                ('af_einschlussgruppen', models.CharField(blank=True, db_column='af_einschlussgruppen', max_length=250, null=True)),
                ('af_sonstige_vergabehinweise', models.CharField(blank=True, db_column='af_sonstige_vergabehinweise', max_length=250, null=True)),
                ('geloescht', models.IntegerField(blank=True, db_column='geloescht', null=True)),
                ('kannweg', models.IntegerField(blank=True, null=True)),
                ('modelliert', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Erlaubte AF/GF-Kombination',
                'verbose_name_plural': '04_Erlaubte AF/GF-Kombinationen-Übersicht (tblUebersichtAF_GFs)',
                'db_table': 'tblUEbersichtAF_GFs',
                'ordering': ['-id'],
                'managed': True,
                'unique_together': {('name_gf_neu', 'name_af_neu')},
            },
        ),
        migrations.CreateModel(
            name='TblRollehataf',
            fields=[
                ('rollenmappingid', models.AutoField(db_column='rollenmappingid', primary_key=True, serialize=False, verbose_name='ID')),
                ('mussfeld', models.IntegerField(blank=True, db_column='mussfeld', null=True, verbose_name='Muss')),
                ('bemerkung', models.CharField(blank=True, db_column='bemerkung', max_length=250, null=True)),
                ('einsatz', models.IntegerField(choices=[(0, 'nicht zugewiesen'), (1, 'Nur DV-User'), (2, 'XV, AV, BV, CV'), (4, 'nur XV-User'), (8, 'AV, BV, CV')], db_column='einsatz', default=0)),
                ('af', models.ForeignKey(blank=True, db_column='af', null=True, on_delete=django.db.models.deletion.CASCADE, to='rapp.tblafliste', verbose_name='AF')),
                ('rollenname', models.ForeignKey(db_column='rollenname', on_delete=django.db.models.deletion.CASCADE, to='rapp.tblrollen')),
            ],
            options={
                'verbose_name': 'Rolle und ihre Arbeitsplatzfunktionen',
                'verbose_name_plural': '02_Rollen und ihre Arbeitsplatzfunktionen (tbl_RolleHatAF)',
                'db_table': 'tbl_RolleHatAF',
                'ordering': ['rollenname__rollenname', 'af__af_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblrechteamneu',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_column='userid', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='name', max_length=100, null=True)),
                ('tf', models.CharField(blank=True, db_column='tf', db_index=True, max_length=100, null=True)),
                ('tf_beschreibung', models.CharField(blank=True, db_column='tf_beschreibung', max_length=500, null=True)),
                ('enthalten_in_af', models.CharField(blank=True, db_column='enthalten_in_af', db_index=True, max_length=100, null=True)),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='tf_kritikalitaet', max_length=64, null=True)),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='tf_eigentuemer_org', max_length=64, null=True)),
                ('tf_technische_plattform', models.CharField(blank=True, db_column='tf_technische_plattform', db_index=True, max_length=64, null=True)),
                ('gf', models.CharField(blank=True, db_column='gf', db_index=True, max_length=100, null=True)),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='af_gueltig_ab', null=True)),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='af_gueltig_bis', null=True)),
                ('direct_connect', models.CharField(blank=True, db_column='direct_connect', max_length=50, null=True)),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='hk_tf_in_af', max_length=150, null=True)),
                ('gf_beschreibung', models.CharField(blank=True, db_column='gf_beschreibung', max_length=250, null=True)),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='af_zuweisungsdatum', null=True)),
                ('gefunden', models.IntegerField(blank=True, db_column='gefunden', null=True)),
                ('geaendert', models.IntegerField(blank=True, db_column='geaendert', null=True)),
                ('angehaengt_bekannt', models.IntegerField(blank=True, db_column='angehaengt_bekannt', null=True)),
                ('angehaengt_sonst', models.IntegerField(blank=True, db_column='angehaengt_sonst', null=True)),
                ('doppelerkennung', models.IntegerField(blank=True, null=True)),
                ('af_beschreibung', models.TextField(blank=True, default='', max_length=2000, null=True)),
                ('npu_rolle', models.CharField(blank=True, max_length=20, null=True)),
                ('npu_grund', models.CharField(blank=True, max_length=2000, null=True)),
                ('iiq_organisation', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'tblRechteAMNeu',
                'managed': True,
                'unique_together': {('userid', 'tf', 'enthalten_in_af', 'tf_technische_plattform', 'gf')},
            },
        ),
        migrations.CreateModel(
            name='TblPlattform',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('tf_technische_plattform', models.CharField(db_column='tf_technische_plattform', max_length=32, unique=True, verbose_name='Plattform')),
                ('geloescht', models.IntegerField(blank=True, null=True, verbose_name='gelöscht')),
            ],
            options={
                'verbose_name': 'Plattform',
                'verbose_name_plural': '07_Plattform-Übersicht (tblPlattform)',
                'db_table': 'tblPlattform',
                'ordering': ['tf_technische_plattform'],
                'managed': True,
                'unique_together': {('id', 'tf_technische_plattform', 'geloescht')},
            },
        ),
        migrations.CreateModel(
            name='TblGesamtHistorie',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('id_alt', models.IntegerField(db_column='id_alt', db_index=True)),
                ('tf', models.CharField(db_column='tf', max_length=100, verbose_name='TF')),
                ('tf_beschreibung', models.CharField(blank=True, db_column='tf_beschreibung', max_length=500, null=True, verbose_name='TF-Beschreibung')),
                ('enthalten_in_af', models.CharField(blank=True, db_column='enthalten_in_af', max_length=100, null=True, verbose_name='AF')),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='tf_kritikalitaet', max_length=64, null=True, verbose_name='TF-Kritikalität')),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='tf_eigentuemer_org', max_length=64, null=True, verbose_name='TF-Eigentümer-orga')),
                ('gf', models.CharField(blank=True, db_column='gf', max_length=100, null=True, verbose_name='GF')),
                ('datum', models.DateTimeField(db_column='datum', verbose_name='Recht gefunden am')),
                ('geloescht', models.IntegerField(blank=True, db_column='geloescht', null=True, verbose_name='gelöscht')),
                ('gefunden', models.IntegerField(blank=True, null=True)),
                ('wiedergefunden', models.DateTimeField(blank=True, null=True)),
                ('geaendert', models.IntegerField(blank=True, db_column='geaendert', null=True, verbose_name='AF geändert')),
                ('neueaf', models.CharField(blank=True, db_column='neueaf', db_index=True, max_length=50, null=True)),
                ('loeschdatum', models.DateTimeField(blank=True, db_column='loeschdatum', null=True, verbose_name='Löschdatum')),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='af_zuweisungsdatum', null=True, verbose_name='AF Zuweisung')),
                ('af_zuweisungsdatum_alt', models.DateTimeField(blank=True, db_column='af_zuweisungsdatum_alt', null=True, verbose_name='AF Zuweisung alt')),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='af_gueltig_ab', null=True, verbose_name='AF gültig ab')),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='af_gueltig_bis', null=True, verbose_name='AF gültig bis')),
                ('direct_connect', models.CharField(blank=True, db_column='direct_connect', max_length=100, null=True, verbose_name='Direktverbindung')),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='hk_tf_in_af', max_length=4, null=True, verbose_name='max. Krit. TF in AF')),
                ('gf_beschreibung', models.CharField(blank=True, db_column='gf_beschreibung', max_length=300, null=True, verbose_name='GF Kurzbeschreibung')),
                ('nicht_ai', models.IntegerField(blank=True, db_column='nicht_ai', null=True)),
                ('patchdatum', models.DateTimeField(blank=True, db_column='patchdatum', null=True)),
                ('wertmodellvorpatch', models.TextField(blank=True, db_column='wert_modell_vor_patch', null=True)),
                ('letzte_aenderung', models.DateTimeField(blank=True, null=True)),
                ('af_beschreibung', models.TextField(blank=True, default='--', max_length=2000, null=True)),
                ('modell', models.ForeignKey(db_column='modell', on_delete=django.db.models.deletion.CASCADE, to='rapp.tbluebersichtafgfs')),
                ('plattform', models.ForeignKey(db_column='plattform_id', on_delete=django.db.models.deletion.CASCADE, to='rapp.tblplattform', verbose_name='Plattform')),
                ('userid_name', models.ForeignKey(db_column='userid_und_name_id', on_delete=django.db.models.deletion.PROTECT, to='rapp.tbluseridundname')),
            ],
            options={
                'verbose_name': 'Historisierter Eintrag der Gesamttabelle (tblGesamtHistorie)',
                'verbose_name_plural': '99_Historisierte Einträge der Gesamttabelle (tblGesamtHistorie)',
                'db_table': 'tblGesamtHistorie',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RACF_Rechte',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=4, null=True)),
                ('group', models.CharField(max_length=10)),
                ('ressource_class', models.CharField(db_column='class', max_length=16, null=True)),
                ('profil', models.CharField(db_index=True, max_length=128, null=True)),
                ('access', models.CharField(max_length=16, null=True)),
                ('test', models.IntegerField()),
                ('produktion', models.IntegerField()),
                ('alter_control_update', models.IntegerField()),
                ('datum', models.DateTimeField(default=django.utils.timezone.now, null=True)),
            ],
            options={
                'verbose_name': 'RACF-Rechte',
                'verbose_name_plural': '40_RACF - Berechtigungen',
                'ordering': ['group', 'profil'],
                'managed': True,
                'index_together': {('group', 'profil')},
            },
        ),
        migrations.CreateModel(
            name='Manuelle_Berechtigung',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('ersteller', models.CharField(max_length=50, null=True)),
                ('letzte_aenderung', models.DateTimeField(default=django.utils.timezone.now)),
                ('statisch', mdeditor.fields.MDTextField()),
                ('relativ', mdeditor.fields.MDTextField()),
                ('verbundene_af', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rapp.tblafliste')),
            ],
            options={
                'verbose_name': 'Manuell nachzuhaltenede Berechtigung',
                'verbose_name_plural': '10_Manuell nachzuhaltenede Berechtigungen',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Direktverbindungen',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('organisation', models.CharField(max_length=30)),
                ('entscheidung', models.CharField(max_length=30, null=True)),
                ('entitlement', models.CharField(db_index=True, max_length=100)),
                ('applikation', models.CharField(max_length=20, null=True)),
                ('instanz', models.CharField(max_length=20, null=True)),
                ('identitaet', models.CharField(db_index=True, max_length=50)),
                ('manager', models.CharField(max_length=100, null=True)),
                ('vorname', models.CharField(max_length=100)),
                ('nachname', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=100, null=True)),
                ('typ', models.CharField(max_length=100, null=True)),
                ('nicht_anmailen', models.CharField(max_length=8, null=True)),
                ('ansprechpartner', models.CharField(max_length=100, null=True)),
                ('letzte_aenderung', models.DateTimeField(default=django.utils.timezone.now, null=True)),
            ],
            options={
                'verbose_name': 'Direktverbindungen',
                'verbose_name_plural': '61_Direktverbindungen',
                'managed': True,
                'unique_together': {('entitlement', 'account_name')},
            },
        ),
        migrations.CreateModel(
            name='TblUserhatrolle',
            fields=[
                ('userundrollenid', models.AutoField(db_column='userundrollenid', primary_key=True, serialize=False, verbose_name='ID')),
                ('schwerpunkt_vertretung', models.CharField(blank=True, choices=[('Schwerpunkt', 'Schwerpunktaufgabe'), ('Vertretung', 'Vertretungstätigkeiten, Zweitsysteme'), ('Allgemein', 'Rollen, die nicht Systemen zugeordnet sind')], db_column='schwerpunkt_vertretung', max_length=100, null=True)),
                ('bemerkung', models.TextField(blank=True, db_column='bemerkung', null=True)),
                ('letzte_aenderung', models.DateTimeField(blank=True, db_column='letzte_aenderung', db_index=True, default=django.utils.timezone.now)),
                ('rollenname', models.ForeignKey(db_column='rollenname', on_delete=django.db.models.deletion.CASCADE, to='rapp.tblrollen')),
                ('teamspezifisch', models.ForeignKey(blank=True, db_column='id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='rapp.tblorga')),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='rapp.tbluseridundname', to_field='userid', verbose_name='UserID, Name')),
            ],
            options={
                'verbose_name': 'User und Ihre Rollen',
                'verbose_name_plural': '01_User und Ihre Rollen (tbl_UserHatRolle)',
                'db_table': 'tbl_UserHatRolle',
                'ordering': ['userid__name', '-userid__userid', 'schwerpunkt_vertretung', 'rollenname'],
                'managed': True,
                'unique_together': {('userid', 'rollenname')},
            },
        ),
        migrations.CreateModel(
            name='TblGesamt',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('tf', models.CharField(db_column='tf', db_index=True, max_length=100, verbose_name='TF')),
                ('tf_beschreibung', models.CharField(blank=True, db_column='tf_beschreibung', max_length=500, null=True, verbose_name='TF-Beschreibung')),
                ('enthalten_in_af', models.CharField(blank=True, db_column='enthalten_in_af', db_index=True, max_length=100, null=True, verbose_name='AF')),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='tf_kritikalitaet', max_length=64, null=True, verbose_name='TF-Kritikalität')),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='tf_eigentuemer_org', max_length=64, null=True, verbose_name='TF-Eigentümer-orga')),
                ('gf', models.CharField(blank=True, db_column='gf', max_length=100, null=True, verbose_name='GF')),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='af_gueltig_ab', null=True, verbose_name='AF gültig ab')),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='af_gueltig_bis', null=True, verbose_name='AF gültig bis')),
                ('direct_connect', models.CharField(blank=True, db_column='direct_connect', max_length=100, null=True, verbose_name='Direktverbindung')),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='hk_tf_in_af', max_length=4, null=True, verbose_name='max. Krit. TF in AF')),
                ('gf_beschreibung', models.CharField(blank=True, db_column='gf_beschreibung', max_length=250, null=True, verbose_name='GF Kurzbeschreibung')),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='af_zuweisungsdatum', db_index=True, null=True, verbose_name='AF Zuweisung')),
                ('datum', models.DateTimeField(db_column='datum', verbose_name='Recht gefunden am')),
                ('geloescht', models.IntegerField(blank=True, db_column='geloescht', db_index=True, null=True, verbose_name='gelöscht')),
                ('gefunden', models.IntegerField(blank=True, null=True)),
                ('wiedergefunden', models.DateTimeField(blank=True, null=True)),
                ('geaendert', models.IntegerField(blank=True, db_column='geaendert', null=True, verbose_name='AF geändert')),
                ('neueaf', models.CharField(blank=True, db_column='neueaf', max_length=50, null=True)),
                ('nicht_ai', models.IntegerField(blank=True, db_column='nicht_ai', null=True)),
                ('patchdatum', models.DateTimeField(blank=True, db_column='patchdatum', null=True)),
                ('wertmodellvorpatch', models.TextField(blank=True, db_column='wert_modell_vor_patch', null=True)),
                ('loeschdatum', models.DateTimeField(blank=True, db_column='loeschdatum', null=True, verbose_name='Löschdatum')),
                ('letzte_aenderung', models.DateTimeField(auto_now=True, db_index=True)),
                ('af_beschreibung', models.TextField(blank=True, default='Keine Beschreibung vorhanden', max_length=2000, null=True)),
                ('modell', models.ForeignKey(db_column='modell', on_delete=django.db.models.deletion.CASCADE, to='rapp.tbluebersichtafgfs')),
                ('plattform', models.ForeignKey(db_column='plattform_id', on_delete=django.db.models.deletion.CASCADE, to='rapp.tblplattform', verbose_name='Plattform')),
                ('userid_name', models.ForeignKey(db_column='userid_und_name_id', on_delete=django.db.models.deletion.CASCADE, to='rapp.tbluseridundname')),
            ],
            options={
                'verbose_name': 'Eintrag der Gesamttabelle (tblGesamt)',
                'verbose_name_plural': '08_Gesamttabelle Übersicht (tblGesamt)',
                'db_table': 'tblGesamt',
                'ordering': ['id'],
                'managed': True,
                'index_together': {('userid_name', 'tf', 'enthalten_in_af', 'plattform', 'gf'), ('gf', 'enthalten_in_af')},
            },
        ),
    ]
